//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gekkota.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Gekkota.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Address family not valid..
        /// </summary>
        internal static string Error_AddressFamilyNotValid {
            get {
                return ResourceManager.GetString("Error_AddressFamilyNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot add or remove elements..
        /// </summary>
        internal static string Error_CannotAddOrRemove {
            get {
                return ResourceManager.GetString("Error_CannotAddOrRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert field value to {0}..
        /// </summary>
        internal static string Error_CannotConvertFieldValue {
            get {
                return ResourceManager.GetString("Error_CannotConvertFieldValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection empty..
        /// </summary>
        internal static string Error_CollectionEmpty {
            get {
                return ResourceManager.GetString("Error_CollectionEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection modified after the enumerator was created..
        /// </summary>
        internal static string Error_CollectionNotConsistent {
            get {
                return ResourceManager.GetString("Error_CollectionNotConsistent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection sorted..
        /// </summary>
        internal static string Error_CollectionSorted {
            get {
                return ResourceManager.GetString("Error_CollectionSorted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compression error..
        /// </summary>
        internal static string Error_CompressionError {
            get {
                return ResourceManager.GetString("Error_CompressionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Datagram empty..
        /// </summary>
        internal static string Error_DatagramEmpty {
            get {
                return ResourceManager.GetString("Error_DatagramEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Datagram not valid..
        /// </summary>
        internal static string Error_DatagramNotValid {
            get {
                return ResourceManager.GetString("Error_DatagramNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompression error..
        /// </summary>
        internal static string Error_DecompressionError {
            get {
                return ResourceManager.GetString("Error_DecompressionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deserialization error..
        /// </summary>
        internal static string Error_DeserializationError {
            get {
                return ResourceManager.GetString("Error_DeserializationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enumerator not valid..
        /// </summary>
        internal static string Error_EnumeratorNotValid {
            get {
                return ResourceManager.GetString("Error_EnumeratorNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {0} does not exist..
        /// </summary>
        internal static string Error_FieldDoesNotExist {
            get {
                return ResourceManager.GetString("Error_FieldDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index out of bounds..
        /// </summary>
        internal static string Error_IndexOutOfBounds {
            get {
                return ResourceManager.GetString("Error_IndexOutOfBounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance not modifiable..
        /// </summary>
        internal static string Error_InstanceNotModifiable {
            get {
                return ResourceManager.GetString("Error_InstanceNotModifiable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member {0} not valid..
        /// </summary>
        internal static string Error_MemberNotValid {
            get {
                return ResourceManager.GetString("Error_MemberNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-negative number required..
        /// </summary>
        internal static string Error_NonNegativeNumberRequired {
            get {
                return ResourceManager.GetString("Error_NonNegativeNumberRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-zero number required..
        /// </summary>
        internal static string Error_NonZeroNumberRequired {
            get {
                return ResourceManager.GetString("Error_NonZeroNumberRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} plus {1} is greater than the length of the collection..
        /// </summary>
        internal static string Error_NotEnoughSpaceAvailable {
            get {
                return ResourceManager.GetString("Error_NotEnoughSpaceAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} not subclass of {1}..
        /// </summary>
        internal static string Error_NotSubclassOf {
            get {
                return ResourceManager.GetString("Error_NotSubclassOf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property not settable..
        /// </summary>
        internal static string Error_PropertyNotSettable {
            get {
                return ResourceManager.GetString("Error_PropertyNotSettable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default remote host already established..
        /// </summary>
        internal static string Error_RemoteHostAlreadyEstablished {
            get {
                return ResourceManager.GetString("Error_RemoteHostAlreadyEstablished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default remote host not established..
        /// </summary>
        internal static string Error_RemoteHostNotEstablished {
            get {
                return ResourceManager.GetString("Error_RemoteHostNotEstablished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serialization error..
        /// </summary>
        internal static string Error_SerializationError {
            get {
                return ResourceManager.GetString("Error_SerializationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String empty..
        /// </summary>
        internal static string Error_StringEmpty {
            get {
                return ResourceManager.GetString("Error_StringEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type {0} not found in assembly {1}..
        /// </summary>
        internal static string Error_TypeNotFound {
            get {
                return ResourceManager.GetString("Error_TypeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value not valid..
        /// </summary>
        internal static string Error_ValueNotValid {
            get {
                return ResourceManager.GetString("Error_ValueNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value not between {0} and {1}..
        /// </summary>
        internal static string Error_ValueOutOfRange {
            get {
                return ResourceManager.GetString("Error_ValueOutOfRange", resourceCulture);
            }
        }
    }
}
